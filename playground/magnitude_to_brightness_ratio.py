# --- 等級と明るさの関係式（ポグソンの式）の解説 ---
#
# 天体の等級(magnitude)は、その明るさ(brightness)を対数スケールで表したものです。
# 2つの星の等級(m1, m2)と明るさ(b1, b2)の間には、以下の関係があります。
#
#   m1 - m2 = -2.5 * log10(b1 / b2)
#
# この式は「ポグソンの式」として知られています。
#
# この問題では、明るさの比 (b1 / b2) を求めたいので、式を以下のように変形します。
#
# 1. 両辺を -2.5 で割る:
#    (m1 - m2) / -2.5 = log10(b1 / b2)
#    (m2 - m1) / 2.5 = log10(b1 / b2)
#
# 2. log10を外す（10のべき乗を取る）:
#    10 ** ((m2 - m1) / 2.5) = b1 / b2
#
# この変形した式を使って、等級差から明るさの比を計算します。
#
# --- 補足：「1等級で約2.5倍」という概算について ---
#
# 「1等級の違いで明るさが約2.5倍」というのは、広く使われる便利な近似値です。
#
# 厳密な定義は「5等級の違いで明るさがちょうど100倍違う」というものです。
# これに基づくと、1等級あたりの明るさの比は 100 の5乗根 (⁵√100) となります。
#   ⁵√100 = 100**(1/5) = (10**2)**(1/5) = 10**(2/5) = 10**0.4 ≈ 2.512
#
# このスクリプトでは、この厳密な定義（ポグソンの式）に基づいて計算しているため、
# 2等級差の場合、2.5 * 2.5 = 6.25 ではなく、10**0.8 ≈ 6.31 という結果になります。

def calculate_brightness_ratio(mag1, mag2):
    """
    2つの星の等級から、明るさの比を計算します。

    Parameters
    ----------
    mag1 : float or int
        星1の等級。
    mag2 : float or int
        星2の等級。

    Returns
    -------
    ratio : float
        星1の明るさが星2の明るさの何倍かを示す値。
    """
    # 明るさの比 = 10 ** ((等級2 - 等級1) / 2.5)
    ratio = 10 ** ((mag2 - mag1) / 2.5)
    return ratio

# --- このスクリプトを直接実行した場合の計算 ---
if __name__ == "__main__":
    # --- 問題の条件 ---
    mag_A = 3  # A星の等級
    mag_B = 5  # B星の等級

    # A星がB星の何倍明るいかを計算
    # calculate_brightness_ratio(mag_A, mag_B) は Aの明るさ/Bの明るさ を返す
    ratio_A_to_B = calculate_brightness_ratio(mag_A, mag_B)

    print("--- 等級差から明るさの比を計算 ---")
    print(f"入力値:")
    print(f"  - A星の等級 (m_A): {mag_A} 等")
    print(f"  - B星の等級 (m_B): {mag_B} 等")
    print("-" * 30)
    print("計算式: 明るさの比 = 10 ** ((m_B - m_A) / 2.5)")
    print(f"      = 10 ** (({mag_B} - {mag_A}) / 2.5)")
    print(f"      = 10 ** ({mag_B - mag_A} / 2.5)")
    print(f"      = 10 ** {(mag_B - mag_A) / 2.5:.1f}")
    print("-" * 30)
    print("計算結果:")
    print(f"  => A星はB星の約 {ratio_A_to_B:.2f} 倍の明るさです。")